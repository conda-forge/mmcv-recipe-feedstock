{% set version = "2.0.0" %}
{% set number = 0 %}  # build number
# see https://github.com/conda-forge/conda-forge.github.io/issues/1059 for naming discussion
{% set torch_proc_type = "cuda" if cuda_compiler_version != "None" else "cpu" %}
{% if cuda_compiler_version != "None" %}
{% set number = number + 200 %}
{% endif %}

package:
  name: mmcv-recipe
  version: {{ version }}

source:
  url: https://pypi.io/packages/source/m/mmcv/mmcv-{{ version }}.tar.gz
  sha256: 2a26c0b1148979954da9c98f88b1ca038ef823031f5975ff4f8951e75474638c

build:
  number: {{ number }}

outputs:
  - name: mmcv
    build:
      string: cuda{{ cuda_compiler_version | replace('.', '') }}py{{ CONDA_PY }}h{{ PKG_HASH }}_{{ PKG_BUILDNUM }}  # [cuda_compiler_version != "None"]
      string: cpu_py{{ CONDA_PY }}h{{ PKG_HASH }}_{{ PKG_BUILDNUM }}  # [cuda_compiler_version == "None"]
    script: build_mmcv.bat  # [win]
    script: build_mmcv.sh  # [not win]
    requirements:
      build:
        - ninja
        - psutil
        - python                                         # [build_platform != target_platform]
        - pytorch ={{ pytorch }}={{ torch_proc_type }}*  # [build_platform != target_platform]
        - {{ compiler('c') }}
        - {{ compiler('cxx') }}
        # this adds matching cuda requirement to run deps using __cuda package
        - {{ compiler('cuda') }}  # [cuda_compiler_version != "None"]
      host:
        - numpy
        - pip
        - python
      run:
        # intentionally skipping opencv and pytorch (following upstream vendor)
        - __cuda  # [cuda_compiler_version != "None"]
        - addict
        - mmengine>=0.2.0
        - {{ pin_compatible('numpy') }}
        - packaging
        - Pillow
        - pyyaml
        - typing_extensions
        - yapf
      run_constrained:
        # additional run constraint to the one from the (version-only) run_export;
        # constraining the CPU builds to CPU pytorch isn't 100% necessary, but cleaner
        - pytorch =*={{ torch_proc_type }}*
    test:
      imports:
        - mmcv
      commands:
        - pip check
        - python -c "import mmcv; print(mmcv.__version__)"
      requires:
        - pip

about:
  home: https://github.com/open-mmlab/mmcv
  summary: OpenMMLab Computer Vision Foundation
  license: Apache-2.0 AND LicenseRef-NVIDIA-License
  license_file:
    - LICENSE
    - LICENSES.md
  doc_url: https://mmcv.readthedocs.io
  dev_url: https://github.com/open-mmlab/mmcv

extra:
  recipe-maintainers:
    - weiji14
    - apatsekin
  feedstock-name: mmcv
